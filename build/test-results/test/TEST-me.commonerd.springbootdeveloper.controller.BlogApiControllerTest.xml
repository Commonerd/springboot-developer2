<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" tests="5" skipped="0" failures="0" errors="0" timestamp="2023-06-04T08:14:23" hostname="DESKTOP-O93F7HU" time="1.171">
  <properties/>
  <testcase name="deleteArticle: 아티클 삭제에 성공한다." classname="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" time="0.529"/>
  <testcase name="findArticle: 아티클 단건 조회에 성공한다." classname="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" time="0.223"/>
  <testcase name="findAllArticles: 아티클 목록 조회에 성공한다." classname="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" time="0.039"/>
  <testcase name="addArticle: 아티클 추가에 성공한다." classname="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" time="0.31"/>
  <testcase name="updateArticle: 아티클 수정에 성공한다." classname="me.commonerd.springbootdeveloper.controller.BlogApiControllerTest" time="0.061"/>
  <system-out><![CDATA[2023-06-04T17:14:21.195+09:00  INFO 17432 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [me.commonerd.springbootdeveloper.controller.BlogApiControllerTest]: BlogApiControllerTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2023-06-04T17:14:21.253+09:00  INFO 17432 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration me.commonerd.springbootdeveloper.SpringBootDeveloperApplication for test class me.commonerd.springbootdeveloper.controller.BlogApiControllerTest

  .   ____          _            __ _ _
 /\\ / ___'_ __ _ _(_)_ __  __ _ \ \ \ \
( ( )\___ | '_ | '_| | '_ \/ _` | \ \ \ \
 \\/  ___)| |_)| | | | | || (_| |  ) ) ) )
  '  |____| .__|_| |_|_| |_\__, | / / / /
 =========|_|==============|___/=/_/_/_/
 :: Spring Boot ::                (v3.0.2)

2023-06-04T17:14:21.381+09:00  INFO 17432 --- [    Test worker] m.c.s.controller.BlogApiControllerTest   : Starting BlogApiControllerTest using Java 17.0.6 with PID 17432 (started by 41m in C:\Users\41m\Documents\projects\spring-developer2)
2023-06-04T17:14:21.382+09:00  INFO 17432 --- [    Test worker] m.c.s.controller.BlogApiControllerTest   : No active profile set, falling back to 1 default profile: "default"
2023-06-04T17:14:22.100+09:00  INFO 17432 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Bootstrapping Spring Data JPA repositories in DEFAULT mode.
2023-06-04T17:14:22.156+09:00  INFO 17432 --- [    Test worker] .s.d.r.c.RepositoryConfigurationDelegate : Finished Spring Data repository scanning in 54 ms. Found 3 JPA repository interfaces.
2023-06-04T17:14:22.389+09:00  INFO 17432 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Starting...
2023-06-04T17:14:22.394+09:00  INFO 17432 --- [    Test worker] com.zaxxer.hikari.pool.HikariPool        : HikariPool-2 - Added connection conn10: url=jdbc:h2:mem:fde0b008-21e3-43da-8548-32d4bef9c96f user=SA
2023-06-04T17:14:22.395+09:00  INFO 17432 --- [    Test worker] com.zaxxer.hikari.HikariDataSource       : HikariPool-2 - Start completed.
2023-06-04T17:14:22.398+09:00  INFO 17432 --- [    Test worker] o.hibernate.jpa.internal.util.LogHelper  : HHH000204: Processing PersistenceUnitInfo [name: default]
2023-06-04T17:14:22.440+09:00  WARN 17432 --- [    Test worker] org.hibernate.orm.deprecation            : HHH90000021: Encountered deprecated setting [javax.persistence.sharedCache.mode], use [jakarta.persistence.sharedCache.mode] instead
2023-06-04T17:14:22.461+09:00  INFO 17432 --- [    Test worker] SQL dialect                              : HHH000400: Using dialect: org.hibernate.dialect.H2Dialect
Hibernate: 
    
    drop table if exists article cascade 
Hibernate: 
    
    drop table if exists refresh_token cascade 
Hibernate: 
    
    drop table if exists users cascade 
Hibernate: 
    
    create table article (
       id bigint generated by default as identity,
        author varchar(255) not null,
        content varchar(255) not null,
        created_at timestamp(6),
        title varchar(255) not null,
        updated_at timestamp(6),
        primary key (id)
    )
Hibernate: 
    
    create table refresh_token (
       id bigint generated by default as identity,
        refresh_token varchar(255) not null,
        user_id bigint not null,
        primary key (id)
    )
Hibernate: 
    
    create table users (
       id bigint generated by default as identity,
        email varchar(255) not null,
        nickname varchar(255),
        password varchar(255),
        primary key (id)
    )
Hibernate: 
    
    alter table if exists refresh_token 
       add constraint UK_f95ixxe7pa48ryn1awmh2evt7 unique (user_id)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_6dotkott2kjsp8vw4d0m25fb7 unique (email)
Hibernate: 
    
    alter table if exists users 
       add constraint UK_2ty1xmrrgtn89xt7kyxx6ta7h unique (nickname)
2023-06-04T17:14:22.591+09:00  INFO 17432 --- [    Test worker] o.h.e.t.j.p.i.JtaPlatformInitiator       : HHH000490: Using JtaPlatform implementation: [org.hibernate.engine.transaction.jta.platform.internal.NoJtaPlatform]
2023-06-04T17:14:22.591+09:00  INFO 17432 --- [    Test worker] j.LocalContainerEntityManagerFactoryBean : Initialized JPA EntityManagerFactory for persistence unit 'default'
2023-06-04T17:14:22.788+09:00  WARN 17432 --- [    Test worker] JpaBaseConfiguration$JpaWebConfiguration : spring.jpa.open-in-view is enabled by default. Therefore, database queries may be performed during view rendering. Explicitly configure spring.jpa.open-in-view to disable this warning
2023-06-04T17:14:22.941+09:00  INFO 17432 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will secure any request with [org.springframework.security.web.session.DisableEncodeUrlFilter@7d412ab5, org.springframework.security.web.context.request.async.WebAsyncManagerIntegrationFilter@74ee07e, org.springframework.security.web.context.SecurityContextHolderFilter@6a063931, org.springframework.security.web.header.HeaderWriterFilter@42210d27, org.springframework.security.web.authentication.logout.LogoutFilter@406cf37f, org.springframework.security.oauth2.client.web.OAuth2AuthorizationRequestRedirectFilter@7a98f106, org.springframework.security.oauth2.client.web.OAuth2LoginAuthenticationFilter@633328d3, me.commonerd.springbootdeveloper.config.TokenAuthenticationFilter@7294c9fe, org.springframework.security.web.savedrequest.RequestCacheAwareFilter@9a932a4, org.springframework.security.web.servletapi.SecurityContextHolderAwareRequestFilter@43ab4e83, org.springframework.security.web.authentication.AnonymousAuthenticationFilter@3c88db1, org.springframework.security.web.session.SessionManagementFilter@74307afd, org.springframework.security.web.access.ExceptionTranslationFilter@2258228f, org.springframework.security.web.access.intercept.FilterSecurityInterceptor@4e396d1c]
2023-06-04T17:14:23.046+09:00  INFO 17432 --- [    Test worker] o.s.b.a.h2.H2ConsoleAutoConfiguration    : H2 console available at '/h2-console'. Database available at 'jdbc:h2:mem:fde0b008-21e3-43da-8548-32d4bef9c96f'
2023-06-04T17:14:23.079+09:00  WARN 17432 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@283074e8. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-04T17:14:23.080+09:00  INFO 17432 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure org.springframework.boot.autoconfigure.security.servlet.PathRequest$H2ConsoleRequestMatcher@283074e8
2023-06-04T17:14:23.080+09:00  WARN 17432 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/static/js/img/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-04T17:14:23.080+09:00  INFO 17432 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/static/js/img/**']
2023-06-04T17:14:23.080+09:00  WARN 17432 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/css/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-04T17:14:23.080+09:00  INFO 17432 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/css/**']
2023-06-04T17:14:23.080+09:00  WARN 17432 --- [    Test worker] o.s.s.c.a.web.builders.WebSecurity       : You are asking Spring Security to ignore Mvc [pattern='/js/**']. This is not recommended -- please use permitAll via HttpSecurity#authorizeHttpRequests instead.
2023-06-04T17:14:23.081+09:00  INFO 17432 --- [    Test worker] o.s.s.web.DefaultSecurityFilterChain     : Will not secure Mvc [pattern='/js/**']
2023-06-04T17:14:23.176+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:23.177+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:23.180+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 2 ms
2023-06-04T17:14:23.200+09:00  INFO 17432 --- [    Test worker] m.c.s.controller.BlogApiControllerTest   : Started BlogApiControllerTest in 1.931 seconds (process running for 21.401)
2023-06-04T17:14:23.213+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:23.214+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:23.215+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-04T17:14:23.743+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:23.743+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:23.745+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
2023-06-04T17:14:23.965+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:23.966+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:23.968+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-04T17:14:24.008+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:24.009+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:24.010+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
2023-06-04T17:14:24.322+09:00  INFO 17432 --- [    Test worker] o.s.b.t.m.w.SpringBootMockServletContext : Initializing Spring TestDispatcherServlet ''
2023-06-04T17:14:24.322+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Initializing Servlet ''
2023-06-04T17:14:24.323+09:00  INFO 17432 --- [    Test worker] o.s.t.web.servlet.TestDispatcherServlet  : Completed initialization in 1 ms
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0
Hibernate: 
    delete 
    from
        article 
    where
        id=?
Hibernate: 
    select
        u1_0.id,
        u1_0.email,
        u1_0.nickname,
        u1_0.password 
    from
        users u1_0
Hibernate: 
    delete 
    from
        users 
    where
        id=?
Hibernate: 
    insert 
    into
        users
        (id, email, nickname, password) 
    values
        (default, ?, ?, ?)
Hibernate: 
    insert 
    into
        article
        (id, author, content, created_at, title, updated_at) 
    values
        (default, ?, ?, ?, ?, ?)
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
Hibernate: 
    update
        article 
    set
        author=?,
        content=?,
        created_at=?,
        title=?,
        updated_at=? 
    where
        id=?
Hibernate: 
    select
        a1_0.id,
        a1_0.author,
        a1_0.content,
        a1_0.created_at,
        a1_0.title,
        a1_0.updated_at 
    from
        article a1_0 
    where
        a1_0.id=?
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
